from qtpy.QtWidgets import (
    QWidget, QAbstractItemView, QScrollArea, QSplitter, qApp)
from qtpy.QtCore import Qt, QModelIndex

from cgwidgets.utils import getWidgetAncestor, attrs
from cgwidgets.settings.colors import iColor
from cgwidgets.settings.keylist import CHARACTER_KEYS
from cgwidgets.widgets import AbstractFrameGroupInputWidget, ModelViewWidget, TansuModelViewWidget

from cgwidgets.widgets.TansuWidget import (
    TansuModel, iTansuDynamicWidget
)
from cgwidgets.views import (
    AbstractDragDropTreeView,
    AbstractDragDropListView,
    AbstractDragDropAbstractView
)
class TabTansuDynamicWidgetExample(QWidget):
    """
    TODO:
        turn this into an interface for creating dynamic tab widgets
    """
    def __init__(self, parent=None):
        super(TabTansuDynamicWidgetExample, self).__init__(parent)
        QVBoxLayout(self)
        self.label = QLabel('init')
        self.layout().addWidget(self.label)

    @staticmethod
    def updateGUI(parent, widget, item):
        """
        widget (TansuModelDelegateWidget)
        item (TansuModelItem)
        """
        if item:
            widget.setTitle(item.name())
            widget.getMainWidget().label.setText(item.name())

if __name__ == "__main__":
    import sys
    from qtpy.QtWidgets import QApplication, QLabel, QVBoxLayout
    from qtpy.QtGui import QCursor
    app = QApplication(sys.argv)
    # w = TansuHeader()
    # w.show()


    class test(ModelViewWidget):
        def __init__(self, parent=None):
            super(test, self).__init__(parent)
            self.addWidget(QLabel('a'))
            self.addWidget(QLabel('b'))
            self.addWidget(QLabel('c'))

    w = TansuModelViewWidget()
    #w.setHeaderPosition(attrs.WEST, attrs.SOUTH)
    #header_delegate_widget = QLabel("Custom")
    #w.setHeaderDelegateAlwaysOn(False)
    #
    # w.setMultiSelect(True)
    # w.setMultiSelectDirection(Qt.Vertical)
    # w.setHeaderItemDragDropMode(QAbstractItemView.InternalMove)
    delegate_widget = QLabel("Q")
    w.addHeaderDelegateWidget([Qt.Key_Q], delegate_widget)

    dw = TabTansuDynamicWidgetExample

    for x in range(3):
        widget = QLabel(str(x))
        parent_item = w.insertTansuWidget(x, column_data={'name':str(x), 'one':'test'}, widget=widget)

    for y in range(0, 2):
        w.insertTansuWidget(y, column_data={'name':str(y)}, widget=widget, parent=parent_item)

    w.resize(500, 500)
    w.delegateWidget().handle_length = 100

    w.show()
    # #w.headerWidget().model().setIsDragEnabled(False)
    # w.setHeaderItemIsDropEnabled(True)
    # w.setHeaderItemIsDragEnabled(True)
    # w.setHeaderItemIsEnableable(True)
    # w.setHeaderItemIsDeleteEnabled(False)
    w.move(QCursor.pos())
    sys.exit(app.exec_())